token:
    | TOK_A "a"
    | TOK_B "b" 
    | TOK_C "c" 
    | TOK_NUM <int> 
    | TOK_EOF "eof"

parser "parse" start

%% 

start <bool>:
    / "a"? il = rule1+ "c" "eof" { 
        let sum = List.fold_left (+) 0 in 
        let int_sum = sum il in 
        int_sum mod 2 == 0 
    }
    / "c"* "eof" { true }

rule1 <int>:
    / n = TOK_NUM { n }

