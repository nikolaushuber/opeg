token: 
    | TOK_KW_PARSER "parser" 
    | TOK_KW_TOKEN "token" 
    | TOK_HEADER <string> 
    | TOK_SEM_ACTION <string> 
    | TOK_NAME <string> 
    | TOK_TYPE <string> 
    | TOK_DOUBLE_DOTS ":" 
    | TOK_CHOICE "/" 
    | TOK_BAR "|" 
    | TOK_EQUALS "=" 
    | TOK_OPTION "?" 
    | TOK_STAR "*" 
    | TOK_PLUS "+" 
    | TOK_SEC_DIVIDE "%%" 
    | TOK_EOF "eof" 

parser "parse" start

%% 

start <Parsetree.t>: 
    / hd = TOK_HEADER? "token" ":" tl = tok+ "parser" name = TOK_NAME 
    start_deriv = TOK_NAME "%%" rl = rule+ "eof" 
        {
            {
                header = hd; 
                parser_name = name;
                start_deriv = start_deriv; 
                tokens = tl; 
                rules = rl;
            } 
        }

tok <Parsetree.pt_tok>: 
    / "|" n = TOK_NAME t = TOK_TYPE? short = TOK_NAME? { (n, t, short) }

rule <Parsetree.pt_rule>: 
    / n = TOK_NAME t = TOK_TYPE ":" dl = alt+ { (n, t, dl) }

alt <Parsetree.pt_alt>: 
    / "/" sl = symbol* act = TOK_SEM_ACTION { (sl, act) }

symbol <Parsetree.pt_symb>:
    / syn = TOK_NAME "=" n = TOK_NAME suff = suffix? { (n, Some syn, suff) }
    / n = TOK_NAME suff = suffix? { (n, None, suff) }

suffix <Parsetree.symb_suffix>: 
    / "?" { Optional }
    / "+" { Plus }
    / "*" { Star }
